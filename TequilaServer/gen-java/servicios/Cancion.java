/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package servicios;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2018-06-29")
public class Cancion implements org.apache.thrift.TBase<Cancion, Cancion._Fields>, java.io.Serializable, Cloneable, Comparable<Cancion> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Cancion");

  private static final org.apache.thrift.protocol.TField ID_CANCION_FIELD_DESC = new org.apache.thrift.protocol.TField("idCancion", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField TITULO_FIELD_DESC = new org.apache.thrift.protocol.TField("titulo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField RUTA_FIELD_DESC = new org.apache.thrift.protocol.TField("ruta", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ID_ALBUM_FIELD_DESC = new org.apache.thrift.protocol.TField("idAlbum", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField ID_GENERO_FIELD_DESC = new org.apache.thrift.protocol.TField("idGenero", org.apache.thrift.protocol.TType.I32, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CancionStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CancionTupleSchemeFactory();

  public int idCancion; // required
  public java.lang.String titulo; // required
  public java.lang.String ruta; // required
  public int idAlbum; // required
  public int idGenero; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID_CANCION((short)1, "idCancion"),
    TITULO((short)2, "titulo"),
    RUTA((short)3, "ruta"),
    ID_ALBUM((short)4, "idAlbum"),
    ID_GENERO((short)5, "idGenero");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID_CANCION
          return ID_CANCION;
        case 2: // TITULO
          return TITULO;
        case 3: // RUTA
          return RUTA;
        case 4: // ID_ALBUM
          return ID_ALBUM;
        case 5: // ID_GENERO
          return ID_GENERO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __IDCANCION_ISSET_ID = 0;
  private static final int __IDALBUM_ISSET_ID = 1;
  private static final int __IDGENERO_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID_CANCION, new org.apache.thrift.meta_data.FieldMetaData("idCancion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TITULO, new org.apache.thrift.meta_data.FieldMetaData("titulo", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RUTA, new org.apache.thrift.meta_data.FieldMetaData("ruta", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ID_ALBUM, new org.apache.thrift.meta_data.FieldMetaData("idAlbum", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ID_GENERO, new org.apache.thrift.meta_data.FieldMetaData("idGenero", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Cancion.class, metaDataMap);
  }

  public Cancion() {
  }

  public Cancion(
    int idCancion,
    java.lang.String titulo,
    java.lang.String ruta,
    int idAlbum,
    int idGenero)
  {
    this();
    this.idCancion = idCancion;
    setIdCancionIsSet(true);
    this.titulo = titulo;
    this.ruta = ruta;
    this.idAlbum = idAlbum;
    setIdAlbumIsSet(true);
    this.idGenero = idGenero;
    setIdGeneroIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Cancion(Cancion other) {
    __isset_bitfield = other.__isset_bitfield;
    this.idCancion = other.idCancion;
    if (other.isSetTitulo()) {
      this.titulo = other.titulo;
    }
    if (other.isSetRuta()) {
      this.ruta = other.ruta;
    }
    this.idAlbum = other.idAlbum;
    this.idGenero = other.idGenero;
  }

  public Cancion deepCopy() {
    return new Cancion(this);
  }

  @Override
  public void clear() {
    setIdCancionIsSet(false);
    this.idCancion = 0;
    this.titulo = null;
    this.ruta = null;
    setIdAlbumIsSet(false);
    this.idAlbum = 0;
    setIdGeneroIsSet(false);
    this.idGenero = 0;
  }

  public int getIdCancion() {
    return this.idCancion;
  }

  public Cancion setIdCancion(int idCancion) {
    this.idCancion = idCancion;
    setIdCancionIsSet(true);
    return this;
  }

  public void unsetIdCancion() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDCANCION_ISSET_ID);
  }

  /** Returns true if field idCancion is set (has been assigned a value) and false otherwise */
  public boolean isSetIdCancion() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDCANCION_ISSET_ID);
  }

  public void setIdCancionIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDCANCION_ISSET_ID, value);
  }

  public java.lang.String getTitulo() {
    return this.titulo;
  }

  public Cancion setTitulo(java.lang.String titulo) {
    this.titulo = titulo;
    return this;
  }

  public void unsetTitulo() {
    this.titulo = null;
  }

  /** Returns true if field titulo is set (has been assigned a value) and false otherwise */
  public boolean isSetTitulo() {
    return this.titulo != null;
  }

  public void setTituloIsSet(boolean value) {
    if (!value) {
      this.titulo = null;
    }
  }

  public java.lang.String getRuta() {
    return this.ruta;
  }

  public Cancion setRuta(java.lang.String ruta) {
    this.ruta = ruta;
    return this;
  }

  public void unsetRuta() {
    this.ruta = null;
  }

  /** Returns true if field ruta is set (has been assigned a value) and false otherwise */
  public boolean isSetRuta() {
    return this.ruta != null;
  }

  public void setRutaIsSet(boolean value) {
    if (!value) {
      this.ruta = null;
    }
  }

  public int getIdAlbum() {
    return this.idAlbum;
  }

  public Cancion setIdAlbum(int idAlbum) {
    this.idAlbum = idAlbum;
    setIdAlbumIsSet(true);
    return this;
  }

  public void unsetIdAlbum() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDALBUM_ISSET_ID);
  }

  /** Returns true if field idAlbum is set (has been assigned a value) and false otherwise */
  public boolean isSetIdAlbum() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDALBUM_ISSET_ID);
  }

  public void setIdAlbumIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDALBUM_ISSET_ID, value);
  }

  public int getIdGenero() {
    return this.idGenero;
  }

  public Cancion setIdGenero(int idGenero) {
    this.idGenero = idGenero;
    setIdGeneroIsSet(true);
    return this;
  }

  public void unsetIdGenero() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IDGENERO_ISSET_ID);
  }

  /** Returns true if field idGenero is set (has been assigned a value) and false otherwise */
  public boolean isSetIdGenero() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IDGENERO_ISSET_ID);
  }

  public void setIdGeneroIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IDGENERO_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ID_CANCION:
      if (value == null) {
        unsetIdCancion();
      } else {
        setIdCancion((java.lang.Integer)value);
      }
      break;

    case TITULO:
      if (value == null) {
        unsetTitulo();
      } else {
        setTitulo((java.lang.String)value);
      }
      break;

    case RUTA:
      if (value == null) {
        unsetRuta();
      } else {
        setRuta((java.lang.String)value);
      }
      break;

    case ID_ALBUM:
      if (value == null) {
        unsetIdAlbum();
      } else {
        setIdAlbum((java.lang.Integer)value);
      }
      break;

    case ID_GENERO:
      if (value == null) {
        unsetIdGenero();
      } else {
        setIdGenero((java.lang.Integer)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ID_CANCION:
      return getIdCancion();

    case TITULO:
      return getTitulo();

    case RUTA:
      return getRuta();

    case ID_ALBUM:
      return getIdAlbum();

    case ID_GENERO:
      return getIdGenero();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ID_CANCION:
      return isSetIdCancion();
    case TITULO:
      return isSetTitulo();
    case RUTA:
      return isSetRuta();
    case ID_ALBUM:
      return isSetIdAlbum();
    case ID_GENERO:
      return isSetIdGenero();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Cancion)
      return this.equals((Cancion)that);
    return false;
  }

  public boolean equals(Cancion that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_idCancion = true;
    boolean that_present_idCancion = true;
    if (this_present_idCancion || that_present_idCancion) {
      if (!(this_present_idCancion && that_present_idCancion))
        return false;
      if (this.idCancion != that.idCancion)
        return false;
    }

    boolean this_present_titulo = true && this.isSetTitulo();
    boolean that_present_titulo = true && that.isSetTitulo();
    if (this_present_titulo || that_present_titulo) {
      if (!(this_present_titulo && that_present_titulo))
        return false;
      if (!this.titulo.equals(that.titulo))
        return false;
    }

    boolean this_present_ruta = true && this.isSetRuta();
    boolean that_present_ruta = true && that.isSetRuta();
    if (this_present_ruta || that_present_ruta) {
      if (!(this_present_ruta && that_present_ruta))
        return false;
      if (!this.ruta.equals(that.ruta))
        return false;
    }

    boolean this_present_idAlbum = true;
    boolean that_present_idAlbum = true;
    if (this_present_idAlbum || that_present_idAlbum) {
      if (!(this_present_idAlbum && that_present_idAlbum))
        return false;
      if (this.idAlbum != that.idAlbum)
        return false;
    }

    boolean this_present_idGenero = true;
    boolean that_present_idGenero = true;
    if (this_present_idGenero || that_present_idGenero) {
      if (!(this_present_idGenero && that_present_idGenero))
        return false;
      if (this.idGenero != that.idGenero)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + idCancion;

    hashCode = hashCode * 8191 + ((isSetTitulo()) ? 131071 : 524287);
    if (isSetTitulo())
      hashCode = hashCode * 8191 + titulo.hashCode();

    hashCode = hashCode * 8191 + ((isSetRuta()) ? 131071 : 524287);
    if (isSetRuta())
      hashCode = hashCode * 8191 + ruta.hashCode();

    hashCode = hashCode * 8191 + idAlbum;

    hashCode = hashCode * 8191 + idGenero;

    return hashCode;
  }

  @Override
  public int compareTo(Cancion other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetIdCancion()).compareTo(other.isSetIdCancion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdCancion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idCancion, other.idCancion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitulo()).compareTo(other.isSetTitulo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitulo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.titulo, other.titulo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRuta()).compareTo(other.isSetRuta());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRuta()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ruta, other.ruta);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdAlbum()).compareTo(other.isSetIdAlbum());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdAlbum()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idAlbum, other.idAlbum);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetIdGenero()).compareTo(other.isSetIdGenero());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIdGenero()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.idGenero, other.idGenero);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Cancion(");
    boolean first = true;

    sb.append("idCancion:");
    sb.append(this.idCancion);
    first = false;
    if (!first) sb.append(", ");
    sb.append("titulo:");
    if (this.titulo == null) {
      sb.append("null");
    } else {
      sb.append(this.titulo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ruta:");
    if (this.ruta == null) {
      sb.append("null");
    } else {
      sb.append(this.ruta);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("idAlbum:");
    sb.append(this.idAlbum);
    first = false;
    if (!first) sb.append(", ");
    sb.append("idGenero:");
    sb.append(this.idGenero);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class CancionStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CancionStandardScheme getScheme() {
      return new CancionStandardScheme();
    }
  }

  private static class CancionStandardScheme extends org.apache.thrift.scheme.StandardScheme<Cancion> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Cancion struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID_CANCION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idCancion = iprot.readI32();
              struct.setIdCancionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TITULO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.titulo = iprot.readString();
              struct.setTituloIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // RUTA
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ruta = iprot.readString();
              struct.setRutaIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ID_ALBUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idAlbum = iprot.readI32();
              struct.setIdAlbumIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ID_GENERO
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.idGenero = iprot.readI32();
              struct.setIdGeneroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Cancion struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_CANCION_FIELD_DESC);
      oprot.writeI32(struct.idCancion);
      oprot.writeFieldEnd();
      if (struct.titulo != null) {
        oprot.writeFieldBegin(TITULO_FIELD_DESC);
        oprot.writeString(struct.titulo);
        oprot.writeFieldEnd();
      }
      if (struct.ruta != null) {
        oprot.writeFieldBegin(RUTA_FIELD_DESC);
        oprot.writeString(struct.ruta);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(ID_ALBUM_FIELD_DESC);
      oprot.writeI32(struct.idAlbum);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ID_GENERO_FIELD_DESC);
      oprot.writeI32(struct.idGenero);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class CancionTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public CancionTupleScheme getScheme() {
      return new CancionTupleScheme();
    }
  }

  private static class CancionTupleScheme extends org.apache.thrift.scheme.TupleScheme<Cancion> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Cancion struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetIdCancion()) {
        optionals.set(0);
      }
      if (struct.isSetTitulo()) {
        optionals.set(1);
      }
      if (struct.isSetRuta()) {
        optionals.set(2);
      }
      if (struct.isSetIdAlbum()) {
        optionals.set(3);
      }
      if (struct.isSetIdGenero()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetIdCancion()) {
        oprot.writeI32(struct.idCancion);
      }
      if (struct.isSetTitulo()) {
        oprot.writeString(struct.titulo);
      }
      if (struct.isSetRuta()) {
        oprot.writeString(struct.ruta);
      }
      if (struct.isSetIdAlbum()) {
        oprot.writeI32(struct.idAlbum);
      }
      if (struct.isSetIdGenero()) {
        oprot.writeI32(struct.idGenero);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Cancion struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.idCancion = iprot.readI32();
        struct.setIdCancionIsSet(true);
      }
      if (incoming.get(1)) {
        struct.titulo = iprot.readString();
        struct.setTituloIsSet(true);
      }
      if (incoming.get(2)) {
        struct.ruta = iprot.readString();
        struct.setRutaIsSet(true);
      }
      if (incoming.get(3)) {
        struct.idAlbum = iprot.readI32();
        struct.setIdAlbumIsSet(true);
      }
      if (incoming.get(4)) {
        struct.idGenero = iprot.readI32();
        struct.setIdGeneroIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

